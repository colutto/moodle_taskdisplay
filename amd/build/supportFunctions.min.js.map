{"version":3,"sources":["../src/supportFunctions.js"],"names":["renewDiv","divName","element","document","getElementById","parent","parentNode","wrapper","createElement","setAttribute","replaceChild","changeChart","chartType","chartId","buttonId","sessionName","data","userData","studentsData","chartholder","d3","select","sessionStorage","setItem","userChart","getItem","d3x3d","chart","areaChartMultiSeries","innerHTML","barChartMultiSeries","ribbonChartMultiSeries","datum","call","window","x3dom","reload"],"mappings":"miBAAA,OACA,O,siBASO,QAASA,CAAAA,CAAT,CAAkBC,CAAlB,CAA0B,IACzBC,CAAAA,CAAO,CAAGC,QAAQ,CAACC,cAAT,CAAwBH,CAAxB,CADe,CAEzBI,CAAM,CAAGH,CAAO,CAACI,UAFQ,CAGzBC,CAAO,CAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAHe,CAI7BD,CAAO,CAACE,YAAR,CAAqB,IAArB,CAA2BR,CAA3B,EACAI,CAAM,CAACK,YAAP,CAAoBH,CAApB,CAA6BL,CAA7B,CACH,CAQM,QAASS,CAAAA,CAAT,CAAqBC,CAArB,CAAgCC,CAAhC,CAAyCC,CAAzC,CAAmDC,CAAnD,CAA+D,CAClEf,CAAQ,CAACa,CAAD,CAAR,CACA,GAAIG,CAAAA,CAAJ,CACA,GAAc,aAAX,EAAAH,CAAH,CAA4B,CACxBG,CAAI,CAAGC,UACV,CAFD,IAEM,CACFD,CAAI,CAAGE,cACV,CACD,GAAIC,CAAAA,CAAW,CAAGC,CAAE,CAACC,MAAH,CAAU,IAAIR,CAAd,CAAlB,CACAS,cAAc,CAACC,OAAf,CAAuBR,CAAW,CAAC,OAAnC,CAA4CH,CAA5C,EACA,GAAIY,CAAAA,CAAJ,CACA,OAAOF,cAAc,CAACG,OAAf,CAAuBV,CAAW,CAAC,OAAnC,CAAP,EACI,IAAK,sBAAL,CACIS,CAAS,CAAGE,CAAK,CAACC,KAAN,CAAYC,oBAAZ,EAAZ,CACAzB,QAAQ,CAACC,cAAT,CAAwBU,CAAxB,EAAkCe,SAAlC,CAA8C,YAA9C,CACA,MACJ,IAAK,qBAAL,CACIL,CAAS,CAAGE,CAAK,CAACC,KAAN,CAAYG,mBAAZ,EAAZ,CACA3B,QAAQ,CAACC,cAAT,CAAwBU,CAAxB,EAAkCe,SAAlC,CAA8C,WAA9C,CACA,MACJ,QACIL,CAAS,CAAGE,CAAK,CAACC,KAAN,CAAYI,sBAAZ,EAAZ,CACA5B,QAAQ,CAACC,cAAT,CAAwBU,CAAxB,EAAkCe,SAAlC,CAA8C,cAA9C,CAXR,CAaAV,CAAW,CAACa,KAAZ,CAAkBhB,CAAlB,EAAwBiB,IAAxB,CAA6BT,CAA7B,EACAU,MAAM,CAACC,KAAP,CAAaC,MAAb,EACH,C","sourcesContent":["import * as d3 from './d3-x3d_library/d3';\nimport * as d3x3d from './d3-x3d_library/d3-x3d';\nimport 'block_taskdisplay/x3dom';\nimport {userData} from './ajaxcalls';\nimport {studentsData} from './ajaxcalls';\n/**\n * Renews the HTML Element when the chart is getting changed because the variables of the HTML\n * Elements need to be renewed\n * @param divName The id-Name of the HTML Element which should get deleted.\n */\nexport function renewDiv(divName){\n    var element = document.getElementById(divName);\n    var parent = element.parentNode;\n    var wrapper = document.createElement('div');\n    wrapper.setAttribute('id', divName);\n    parent.replaceChild(wrapper, element);\n}\n\n/**\n * Changes the chart of the X3DOM scene.\n * @param divName The id-Name of the HTML Element in which the X3DOM chart is displayed.\n * @param chartType The type of the new chart.\n * @param data The data for the new chart.\n */\nexport function changeChart(chartType, chartId, buttonId, sessionName){\n    renewDiv(chartId);\n    var data;\n    if(chartId == 'chartholder'){\n        data = userData;\n    } else{\n        data = studentsData;\n    }\n    var chartholder = d3.select('#'+chartId);\n    sessionStorage.setItem(sessionName+'Chart', chartType);\n    var userChart;\n    switch(sessionStorage.getItem(sessionName+'Chart')){\n        case 'areaChartMultiSeries':\n            userChart = d3x3d.chart.areaChartMultiSeries();\n            document.getElementById(buttonId).innerHTML = 'Area Chart';\n            break;\n        case 'barChartMultiSeries':\n            userChart = d3x3d.chart.barChartMultiSeries();\n            document.getElementById(buttonId).innerHTML = 'Bar Chart';\n            break;\n        default:\n            userChart = d3x3d.chart.ribbonChartMultiSeries();\n            document.getElementById(buttonId).innerHTML = 'Ribbon Chart';\n    }\n    chartholder.datum(data).call(userChart);\n    window.x3dom.reload();\n}\n"],"file":"supportFunctions.min.js"}