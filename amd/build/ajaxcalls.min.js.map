{"version":3,"sources":["../src/ajaxcalls.js"],"names":["userData","studentsData","get_chart_data","connection","ajax","call","methodname","args","fail","notification","exception","then","data","convertAJAXData","supportFunct","renewDiv","chartholder","d3","select","sessionStorage","getItem","userChart","d3x3d","chart","areaChartMultiSeries","ribbonChartMultiSeries","barChartMultiSeries","datum","studentsChart","window","x3dom","reload","key","course","assignmentsUser","assignmentsStudents","index","assignmentName","assignments","value","is_submitted","push","value2","totalSubmissions","number_of_users","unshift","course_name","values"],"mappings":"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","sourcesContent":["import * as ajax from 'core/ajax';\nimport * as notification from 'core/notification';\nimport * as d3 from './d3-x3d_library/d3';\nimport * as d3x3d from './d3-x3d_library/d3-x3d';\nimport * as supportFunct from './supportFunctions';\nexport let userData;\nexport let studentsData;\n/**\n * The function getChartData retrieves the data via AJAX from the server to the client and converts it\n * into an usable data structure for JavaScript.\n */\nexport function get_chart_data(){\n    var connection = ajax.call([{\n        methodname: 'block_taskdisplay_loaddata',\n        args: {},\n        fail: notification.exception,\n    }]);\n    connection[0].then(function(data){\n        [userData, studentsData] = convertAJAXData(data);\n        supportFunct.renewDiv('chartholder');\n        var chartholder = d3.select('#chartholder');\n        switch(sessionStorage.getItem('userChart')){\n            case 'areaChartMultiSeries':\n                var userChart = d3x3d.chart.areaChartMultiSeries();\n                break;\n            case 'ribbonChartMultiSeries':\n                var userChart = d3x3d.chart.ribbonChartMultiSeries();\n                break;\n            default:\n                var userChart = d3x3d.chart.barChartMultiSeries();\n        }\n        chartholder.datum(userData).call(userChart);\n        supportFunct.renewDiv('chartholder2');\n        var chartholder = d3.select('#chartholder2');\n        switch(sessionStorage.getItem('studentsChart')){\n            case 'areaChartMultiSeries':\n                var studentsChart = d3x3d.chart.areaChartMultiSeries();\n                break;\n            case 'ribbonChartMultiSeries':\n                var studentsChart = d3x3d.chart.ribbonChartMultiSeries();\n                break;\n            default:\n                var studentsChart = d3x3d.chart.barChartMultiSeries();\n        }\n        chartholder.datum(studentsData).call(studentsChart);\n        window.x3dom.reload();\n    });\n}\n/**\n *\n * @param {*} data; The data which gets transferred in JSON structure via AJAX form the server to the client.\n * @returns userData, StudentData; The two return statements represent the two charts. The userData has stored\n * all the information about the courses and assignments from the user, whereas the studetnsData has stored all the\n * information about the average student submissions of every course.\n */\nexport function convertAJAXData(data){\n    var userData = [];\n    var studentsData = [];\n    for(var key in data){\n    /** The for loop iterates through all the courses in the data object. */\n        var course = data[key];\n        var assignmentsUser = [];\n        var assignmentsStudents = [];\n        var index = 1;\n        for(var assignmentName in course.assignments){\n        /** The for loop iterates through all the assignments of each course. */\n            var value = course.assignments[assignmentName].is_submitted;\n            assignmentsUser.push({key:'EA'+index, value: value});\n            var value2 = (course.assignments[assignmentName].totalSubmissions / course.number_of_users) * 100;\n            assignmentsStudents.push({key:'EA'+index, value: value2});\n            index += 1;\n        }\n        userData.unshift({key:course.course_name, values:assignmentsUser});\n        studentsData.unshift({key:course.course_name, values:assignmentsStudents});\n    }\n    return[userData, studentsData];\n}\nexport function getUserData(){\n    return this.userData;\n}\nexport function getStudentsData(){\n    return this.studentsData;\n}"],"file":"ajaxcalls.min.js"}